#include <stdint.h>
#include <TFTv2.h>
#include <SPI.h>
#include <TouchScreen.h> 

#define YP A2   // must be an analog pin, use "An" notation!
#define XM A1   // must be an analog pin, use "An" notation!
#define YM 14   // can be a digital pin, this is A0
#define XP 17   // can be a digital pin, this is A3 

#define TS_MINX 116*2
#define TS_MAXX 890*2
#define TS_MINY 83*2
#define TS_MAXY 913*2

// For better pressure precision, we need to know the resistance
// between X+ and X- Use any multimeter to read it
// The 2.8" TFT Touch shield has 300 ohms across the X plate
TouchScreen ts = TouchScreen(XP, YP, XM, YM);

int x, y, x1, x2, y1, y2, r;

int  button[12][5] = {//x  y      xN y,n 0/1
                     {  0,  0,   80,  80,0},
                     {  0,  80,  80, 160,0},
                     {  0, 160,  80, 240,0},
                     {  0, 240,  80, 320,0},  

                     { 80,   0, 160,  80,0},
                     { 80,  80, 160, 160,0},
                     { 80, 160, 160, 240,0},
                     { 80, 240, 160, 320,0},  

                     {160,   0, 240,  80,0},
                     {160,  80, 240, 160,0},
                     {160, 160, 240, 240,0},
                     {160, 240, 240, 320,0}  
                  };



void setup()
{
  Tft.TFTinit(); 
  Serial.begin(9600);

  draw_buttons();

char h1[] = "Hello";
  Tft.drawString(h1,0, 50,1,YELLOW);
}

void loop()
{
  // a point object holds x y and z coordinates
  Point p = ts.getPoint();

  p.x = map(p.x, TS_MINX, TS_MAXX, 0, 240);
  p.y = map(p.y, TS_MINY, TS_MAXY, 0, 320);
  
    // we have some minimum pressure we consider 'valid'
  // pressure of 0 means no pressing!
if (p.z > __PRESURE) 
{
for (int i = 0; i < 12; i++) 
  {
  if (p.x > button[i][0] && p.x < button[i][2] )
    {
      if (p.y > button[i][1] && p.y < button[i][3])
        {
       Serial.print("X = "); Serial.print(p.x);
       Serial.print("\tp.x array low = "); Serial.print(button[i][0]);
       Serial.print("\tp.x array high= "); Serial.print(button[i][1]);

       Serial.print("\tY = "); Serial.print(p.y);
       Serial.print("\tp.y array low = "); Serial.print(button[i][2]);
       Serial.print("\tp.y array high= "); Serial.println(button[i][3]);
       action_button(i);
       delay(100);
        }
      }  
    }
  }
}


void draw_buttons()
{
int x2=75;
int y2=75; 
   
for (int i = 0; i < 12; i++) 
  {
  Tft.fillRectangle(button[i][0], button[i][1], x2, y2, RED);   
  }
}


void toggle_button(int a)
{
int x2=75;
int y2=75;
if (button[a][4] == 0)
  {
    Tft.fillRectangle(button[a][0], button[a][1], x2, y2, BLUE);   
    button[a][4] = 1;
  }
  else if (button[a][4] == 1)
  {
    Tft.fillRectangle(button[a][0], button[a][1], x2, y2, RED);   
    button[a][4] = 0;
  }
}

void action_button(int a)
{
   toggle_button(a);
   Tft.drawNumber(a, 0, 0, 5, BLACK);
   // do stuff
}
